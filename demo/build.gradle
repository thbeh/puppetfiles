buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.1.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'demo'
    version =  '0.1.0'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
	compile("org.projectlombok:lombok:1.14.8")

// once a a new release is made, use this
//    compile("com.spotify:dns:2.2.0")

// use this until the new version makes it to maven central
    compile("dnsjava:dnsjava:2.1.6")
    compile("com.google.guava:guava:14.0.1")
    compile("com.google.code.findbugs:jsr305:2.0.1")
    compile("org.slf4j:slf4j-api:1.7.5")
    compile files('spotify/dns-2.2.1-SNAPSHOT.jar')
// end temporary deps...


    compile 'com.codahale.metrics:metrics-core:3.0.1'
    compile 'com.codahale.metrics:metrics-logback:3.0.1'
    compile 'com.codahale.metrics:metrics-httpclient:3.0.1'
    compile 'com.codahale.metrics:metrics-jvm:3.0.1'
    compile 'com.codahale.metrics:metrics-healthchecks:3.0.1'
    compile 'com.codahale.metrics:metrics-jetty8:3.0.1'
    compile 'com.ryantenney.metrics:metrics-spring:3.0.0-RC2'
    compile 'javax.inject:javax.inject:1'


    testCompile("junit:junit")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
